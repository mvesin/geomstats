Script started on 2021-03-23 11:45:02+01:00 [TERM="xterm-256color" TTY="/dev/pts/10" COLUMNS="132" LINES="24"]
]777;notify;Command completed;git push origin feature/test_profiling\]777;precmd\]0;mvesin@apurimac:~/GIT/geomstats/mvesin_geomstats\]7;file://apurimac/user/mvesin/home/GIT/geomstats/mvesin_geomstats\[mvesin@apurimac mvesin_geomstats]$ [14P(reverse-i-search)`':[Cf': git push origin feature/test_profiling[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co': for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $command; done; done[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr': for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo[1@ [A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfailed reverse-i-search)`forf': for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1[8@" ; echo[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co': for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=[1@1[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr': for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th[1@=[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C': for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C': for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C': for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1"[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[mvesin@apurimac mvesin_geomstats]$ for dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_t[4@h=1"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cor dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C dim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cdim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1"[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cim in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" [1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ;[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C in 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; [1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cin 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; e[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; ec[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; ech[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C30 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo [1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C60 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $c[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $co[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $com[C[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C100 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comm[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C00 ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comma[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comman[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C; do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command [1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C do for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ;[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cdo for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; [1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; t[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C for np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_is[Cue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; ti[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; tim[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[K
[K
[K[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmkdir ~/GIT/sed-sam/amdt/fedbiomed/sprint_4_2021-04[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[Kfor np in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $command; done; done[K[K[K[K[K[K[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time [1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time[1@ [A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; tim[1@e[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm in 100 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; ti[1@m[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; tim[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; ti[1@m[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_i[Csue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; t[1@i[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C5 200 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; [1@t[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 300 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; t[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 400 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_is[Cue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; ti[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 500 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; tim[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 600 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 700 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time [1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 800 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 900 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $c[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C 1000 ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $co[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $com[C[1P[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $co[C[1@m[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $c[1@o[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $[1@c[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time [1@$[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time[1@ [A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C4; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; tim[1@e[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; ti[1@m[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do command="python ./profiling/spd_means_i[Csue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; t[1@i[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; [1@t[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C6; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ;[1@ [A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command [1@;[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command[1@ [A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comman[1@d[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C8; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comma[1@n[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comm[1@a[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $com[1@m[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $co[C[1@m[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $c[1@o[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $[1@c[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo [1@$[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo[1@ [A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C5; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; ech[1@o[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; ec[1@h[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; e[1@c[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C3; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; [1@e[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ;[1@ [A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" [1@;[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ; do command="python ./profiling/spd_means_issue.py -c nilearn -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1"[1@ [A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ;[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; e[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; ec[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; ech[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $c[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-d $dim -n $np --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $co[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $com[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comm[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comma[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C--omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $comman[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C--omp_num_threads 1 -s issue913+points=$np+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ;[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; t[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; ti[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; tim[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $c[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $co[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+dim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $com[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cdim=$dim+code=nilearn+omp_num_th=1" ; echo $command ; time $comm[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $comma[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $comman[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $command[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $command;[1P done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $command; [1Pdone[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $command; d[1Pone[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $command; do[1Pne[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $command; don[1Pe[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $command; done[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $command; done [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P[1P
]777;preexec\python ./profiling/spd_means_issue.py -d 10 --omp_num_threads 1 -s issue913+dim=10+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 9, final variance: 18.60717828130072, final dist: 9.353725106142313e-10

real	0m0.669s
user	0m0.598s
sys	0m0.069s
python ./profiling/spd_means_issue.py -d 15 --omp_num_threads 1 -s issue913+dim=15+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 12, final variance: 40.933913353649366, final dist: 5.229841949326687e-09

real	0m0.730s
user	0m0.657s
sys	0m0.059s
python ./profiling/spd_means_issue.py -d 20 --omp_num_threads 1 -s issue913+dim=20+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 17, final variance: 70.68558460188105, final dist: 7.518161074449478e-09

real	0m0.790s
user	0m0.719s
sys	0m0.066s
python ./profiling/spd_means_issue.py -d 30 --omp_num_threads 1 -s issue913+dim=30+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 35, final variance: 155.98331198737216, final dist: 2.8497593934824015e-08

real	0m1.099s
user	0m1.021s
sys	0m0.075s
python ./profiling/spd_means_issue.py -d 40 --omp_num_threads 1 -s issue913+dim=40+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 250, final variance: 272.2044676001977, final dist: 7.97134961177251e-08

real	0m6.284s
user	0m5.919s
sys	0m0.347s
python ./profiling/spd_means_issue.py -d 50 --omp_num_threads 1 -s issue913+dim=50+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 14, final variance: 422.20237118600613, final dist: 4.707334628266607e-09

real	0m1.233s
user	0m1.137s
sys	0m0.093s
python ./profiling/spd_means_issue.py -d 60 --omp_num_threads 1 -s issue913+dim=60+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 19, final variance: 608.6105964838138, final dist: 1.3039616210267967e-07

real	0m1.683s
user	0m1.556s
sys	0m0.123s
python ./profiling/spd_means_issue.py -d 70 --omp_num_threads 1 -s issue913+dim=70+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 17, final variance: 821.8955523543736, final dist: 1.346880153434114e-07

real	0m1.864s
user	0m1.708s
sys	0m0.152s
python ./profiling/spd_means_issue.py -d 80 --omp_num_threads 1 -s issue913+dim=80+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 17, final variance: 1075.8063913149758, final dist: 7.166979813326823e-08

real	0m2.119s
user	0m2.000s
sys	0m0.114s
python ./profiling/spd_means_issue.py -d 90 --omp_num_threads 1 -s issue913+dim=90+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 9, final variance: 1360.7508589502334, final dist: 1.3469651647779606e-07

real	0m1.784s
user	0m1.690s
sys	0m0.089s
python ./profiling/spd_means_issue.py -d 100 --omp_num_threads 1 -s issue913+dim=100+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 10, final variance: 1678.7271328135614, final dist: 3.98587567164124e-07

real	0m2.206s
user	0m2.114s
sys	0m0.086s
python ./profiling/spd_means_issue.py -d 120 --omp_num_threads 1 -s issue913+dim=120+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 14, final variance: 2416.8377378199452, final dist: 3.4615497688619595e-07

real	0m3.627s
user	0m3.501s
sys	0m0.117s
python ./profiling/spd_means_issue.py -d 140 --omp_num_threads 1 -s issue913+dim=140+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 19, final variance: 3285.342319228325, final dist: 7.581637746905216e-07

real	0m6.168s
user	0m5.993s
sys	0m0.160s
python ./profiling/spd_means_issue.py -d 160 --omp_num_threads 1 -s issue913+dim=160+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 29, final variance: 4284.703296927518, final dist: 7.632886596667717e-07

real	0m11.992s
user	0m11.520s
sys	0m0.393s
python ./profiling/spd_means_issue.py -d 180 --omp_num_threads 1 -s issue913+dim=180+omp_num_th=1
INFO: Using numpy backend
INFO: n_iter: 51, final variance: 5412.968497614154, final dist: 1.349609931727926e-06

real	0m26.070s
user	0m25.598s
sys	0m0.419s
python ./profiling/spd_means_issue.py -d 200 --omp_num_threads 1 -s issue913+dim=200+omp_num_th=1
INFO: Using numpy backend
WARNING: Negative eigenvalue encountered in log
/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/autograd/tracer.py:48: RuntimeWarning: invalid value encountered in log
  return f_raw(*args, **kwargs)
WARNING: Maximum number of iterations 1000 reached. The mean may be inaccurate
INFO: n_iter: 1000, final variance: nan, final dist: nan

real	13m16.761s
user	12m58.143s
sys	0m16.365s
python ./profiling/spd_means_issue.py -d 250 --omp_num_threads 1 -s issue913+dim=250+omp_num_th=1
INFO: Using numpy backend
WARNING: Negative eigenvalue encountered in log
/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/autograd/tracer.py:48: RuntimeWarning: invalid value encountered in log
  return f_raw(*args, **kwargs)
^XTraceback (most recent call last):
  File "./profiling/spd_means_issue.py", line 96, in <module>
    mean.fit(data)
  File "/home/mvesin/GIT/geomstats/mvesin_geomstats/geomstats/learning/frechet_mean.py", line 433, in fit
    verbose=self.verbose)
  File "/home/mvesin/GIT/geomstats/mvesin_geomstats/geomstats/learning/frechet_mean.py", line 126, in _default_gradient_descent
    logs = metric.log(point=points, base_point=mean)
  File "/home/mvesin/GIT/geomstats/mvesin_geomstats/geomstats/geometry/spd_matrices.py", line 606, in log
    log = self._aux_log(point, powers[0], powers[1])
  File "/home/mvesin/GIT/geomstats/mvesin_geomstats/geomstats/geometry/spd_matrices.py", line 580, in _aux_log
    log = Matrices.mul(sqrt_base_point, log_at_id, sqrt_base_point)
  File "/home/mvesin/GIT/geomstats/mvesin_geomstats/geomstats/geometry/matrices.py", line 90, in mul
    return reduce(gs.matmul, args)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/autograd/tracer.py", line 48, in f_wrapped
    return f_raw(*args, **kwargs)
KeyboardInterrupt

real	11m29.709s
user	11m8.248s
sys	0m20.130s
python ./profiling/spd_means_issue.py -d 300 --omp_num_threads 1 -s issue913+dim=300+omp_num_th=1
INFO: Using numpy backend
^XTraceback (most recent call last):
  File "./profiling/spd_means_issue.py", line 79, in <module>
    data = space.random_point(n_samples=n_points)
  File "/home/mvesin/GIT/geomstats/mvesin_geomstats/geomstats/geometry/spd_matrices.py", line 75, in random_point
    spd_mat = GeneralLinear.exp(Matrices.to_symmetric(mat))
  File "/home/mvesin/GIT/geomstats/mvesin_geomstats/geomstats/geometry/general_linear.py", line 137, in exp
    return expm(tangent_vec)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/autograd/tracer.py", line 48, in f_wrapped
    return f_raw(*args, **kwargs)
  File "/home/mvesin/GIT/geomstats/mvesin_geomstats/geomstats/_backend/numpy/linalg.py", line 31, in expm
    asp.expm, signature='(n,m)->(n,m)')(x)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/numpy/lib/function_base.py", line 2108, in __call__
    return self._vectorize_call(func=func, args=vargs)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/numpy/lib/function_base.py", line 2182, in _vectorize_call
    res = self._vectorize_call_with_signature(func, args)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/numpy/lib/function_base.py", line 2223, in _vectorize_call_with_signature
    results = func(*(arg[index] for arg in args))
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/autograd/tracer.py", line 48, in f_wrapped
    return f_raw(*args, **kwargs)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/scipy/linalg/matfuncs.py", line 255, in expm
    return scipy.sparse.linalg.expm(A)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/scipy/sparse/linalg/matfuncs.py", line 591, in expm
    return _expm(A, use_exact_onenorm='auto')
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/scipy/sparse/linalg/matfuncs.py", line 652, in _expm
    eta_3 = max(h.d6_tight, h.d8_loose)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/scipy/sparse/linalg/matfuncs.py", line 425, in d6_tight
    self._d6_exact = _onenorm(self.A6)**(1/6.)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/scipy/sparse/linalg/matfuncs.py", line 399, in A6
    self.A4, self.A2, structure=self.structure)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/scipy/sparse/linalg/matfuncs.py", line 166, in _smart_matrix_product
    out = A.dot(B)
KeyboardInterrupt

real	0m2.131s
user	0m2.011s
sys	0m0.079s
]777;notify;Command completed;for dim in 10 15 20 30 40 50 60 70 80 90 100 120 140 160 180 200 250 300   do command="python ./profiling/spd_means_issue.py -d $dim --omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1"   echo $command   time $command  done\]777;precmd\]0;mvesin@apurimac:~/GIT/geomstats/mvesin_geomstats\]7;file://apurimac/user/mvesin/home/GIT/geomstats/mvesin_geomstats\[mvesin@apurimac mvesin_geomstats]$ 
]777;notify;Command completed;for dim in 10 15 20 30 40 50 60 70 80 90 100 120 140 160 180 200 250 300   do command="python ./profiling/spd_means_issue.py -d $dim --omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1"   echo $command   time $command  done\]777;precmd\]0;mvesin@apurimac:~/GIT/geomstats/mvesin_geomstats\]7;file://apurimac/user/mvesin/home/GIT/geomstats/mvesin_geomstats\[mvesin@apurimac mvesin_geomstats]$ for dim in 10 15 20 30 40 50 60 70 80 90 100 120 140 160 180 200 250 300 ; do command="python ./profiling/spd_means_issue.py -d $dim --omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@-[1@c --omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn--omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci--omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl--omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce--omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca--omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr--omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn--omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $command; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --omp_num_threads 1 -s issue913+dim=$dim+omp_num_th=1" ; echo $command ; time $comman[1@d[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C+omp_num_th=1" ; echo $command ; time $comma[1@n[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cc+omp_num_th=1" ; echo $command ; time $comm[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co+omp_num_th=1" ; echo $command ; time $com[1@m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd+omp_num_th=1" ; echo $command ; time $co[C[1@m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce+omp_num_th=1" ; echo $command ; time $c[1@o[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C=+omp_num_th=1" ; echo $command ; time $[1@c[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn+omp_num_th=1" ; echo $command ; time [1@$[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci+omp_num_th=1" ; echo $command ; time[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl+omp_num_th=1" ; echo $command ; tim[1@e[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce+omp_num_th=1" ; echo $command ; ti[1@m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca+omp_num_th=1" ; echo $command ; t[1@i[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr+omp_num_th=1" ; echo $command ; [1@t[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn+omp_num_th=1" ; echo $command ;[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

]777;preexec\python ./profiling/spd_means_issue.py -d 10 -c nilearn --omp_num_threads 1 -s issue913+dim=10+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m0.723s
user	0m0.665s
sys	0m0.056s
python ./profiling/spd_means_issue.py -d 15 -c nilearn --omp_num_threads 1 -s issue913+dim=15+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m0.776s
user	0m0.710s
sys	0m0.064s
python ./profiling/spd_means_issue.py -d 20 -c nilearn --omp_num_threads 1 -s issue913+dim=20+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m0.827s
user	0m0.771s
sys	0m0.052s
python ./profiling/spd_means_issue.py -d 30 -c nilearn --omp_num_threads 1 -s issue913+dim=30+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m1.218s
user	0m1.147s
sys	0m0.068s
python ./profiling/spd_means_issue.py -d 40 -c nilearn --omp_num_threads 1 -s issue913+dim=40+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m5.645s
user	0m5.545s
sys	0m0.087s
python ./profiling/spd_means_issue.py -d 50 -c nilearn --omp_num_threads 1 -s issue913+dim=50+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m1.264s
user	0m1.187s
sys	0m0.073s
python ./profiling/spd_means_issue.py -d 60 -c nilearn --omp_num_threads 1 -s issue913+dim=60+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m1.325s
user	0m1.259s
sys	0m0.063s
python ./profiling/spd_means_issue.py -d 70 -c nilearn --omp_num_threads 1 -s issue913+dim=70+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m1.547s
user	0m1.465s
sys	0m0.078s
python ./profiling/spd_means_issue.py -d 80 -c nilearn --omp_num_threads 1 -s issue913+dim=80+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m1.784s
user	0m1.718s
sys	0m0.062s
python ./profiling/spd_means_issue.py -d 90 -c nilearn --omp_num_threads 1 -s issue913+dim=90+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m2.091s
user	0m2.024s
sys	0m0.061s
python ./profiling/spd_means_issue.py -d 100 -c nilearn --omp_num_threads 1 -s issue913+dim=100+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m2.429s
user	0m2.353s
sys	0m0.070s
python ./profiling/spd_means_issue.py -d 120 -c nilearn --omp_num_threads 1 -s issue913+dim=120+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m3.100s
user	0m3.010s
sys	0m0.083s
python ./profiling/spd_means_issue.py -d 140 -c nilearn --omp_num_threads 1 -s issue913+dim=140+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m3.994s
user	0m3.893s
sys	0m0.086s
python ./profiling/spd_means_issue.py -d 160 -c nilearn --omp_num_threads 1 -s issue913+dim=160+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m5.009s
user	0m4.926s
sys	0m0.070s
python ./profiling/spd_means_issue.py -d 180 -c nilearn --omp_num_threads 1 -s issue913+dim=180+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m6.185s
user	0m6.085s
sys	0m0.087s
python ./profiling/spd_means_issue.py -d 200 -c nilearn --omp_num_threads 1 -s issue913+dim=200+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m7.215s
user	0m7.102s
sys	0m0.098s
python ./profiling/spd_means_issue.py -d 250 -c nilearn --omp_num_threads 1 -s issue913+dim=250+code=nilearn+omp_num_th=1
INFO: Using numpy backend

real	0m11.297s
user	0m10.907s
sys	0m0.339s
python ./profiling/spd_means_issue.py -d 300 -c nilearn --omp_num_threads 1 -s issue913+dim=300+code=nilearn+omp_num_th=1
INFO: Using numpy backend
/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/nilearn/connectome/connectivity_matrices.py:63: RuntimeWarning: invalid value encountered in log
  return np.dot(eigenvectors * function(eigenvalues), eigenvectors.T)
Traceback (most recent call last):
  File "./profiling/spd_means_issue.py", line 99, in <module>
    nilearn_mean = _geometric_mean(data, max_iter=max_iter, tol=1e-7*args.factor)
  File "/user/mvesin/home/.conda/envs/geomstats/lib/python3.7/site-packages/nilearn/connectome/connectivity_matrices.py", line 183, in _geometric_mean
    raise FloatingPointError("Nan value after logarithm operation.")
FloatingPointError: Nan value after logarithm operation.

real	0m9.359s
user	0m9.162s
sys	0m0.179s
]777;notify;Command completed;for dim in 10 15 20 30 40 50 60 70 80 90 100 120 140 160 180 200 250 300   do command="python ./profiling/spd_means_issue.py -d $dim -c nilearn --omp_num_threads 1 -s issue913+dim=$dim+code=nilearn+omp_num_th=1"   echo $command   time $command  done\]777;precmd\]0;mvesin@apurimac:~/GIT/geomstats/mvesin_geomstats\]7;file://apurimac/user/mvesin/home/GIT/geomstats/mvesin_geomstats\[mvesin@apurimac mvesin_geomstats]$ exit
]777;preexec\exit

Script done on 2021-03-23 12:24:23+01:00 [COMMAND_EXIT_CODE="1"]
